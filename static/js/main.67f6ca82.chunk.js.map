{"version":3,"sources":["App.module.css","components/Visitors/Visitors.module.css","components/MyName/MyName.module.css","components/MyQualities/MyQualities.module.css","components/MyQualities/MyQuality/MyQuality.module.css","components/Visitors/InputVisitorName/InputVisitorName.module.css","components/Visitors/AddVisitor/AddVisitor.module.css","components/Visitors/AllVisitors/AllVisitors.module.css","components/Visitors/AllVisitors/CounterVisitors/CounterVisitors.module.css","components/Visitors/AllVisitors/DisplayVisitors/DisplayVisitors.module.css","components/Visitors/AllVisitors/DisplayVisitors/DisplayVisitor/DisplayVisitor.module.css","components/Visitors/HelloVisitor/HelloVisitor.module.css","components/MyName/MyName.jsx","components/MyQualities/MyQuality/MyQuality.jsx","components/MyQualities/MyQualities.jsx","components/Visitors/InputVisitorName/InputVisitorName.jsx","components/Visitors/AddVisitor/AddVisitor.jsx","components/Visitors/AllVisitors/CounterVisitors/CounterVisitors.jsx","components/Visitors/AllVisitors/DisplayVisitors/DisplayVisitor/DisplayVisitor.jsx","components/Visitors/AllVisitors/DisplayVisitors/DisplayVisitors.jsx","components/Visitors/AllVisitors/AllVisitors.jsx","components/Visitors/HelloVisitor/HelloVisitor.jsx","components/Visitors/Visitors.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","MyName","render","className","styles","myName","React","Component","MyQuality","myQuality","props","quality","MyQualities","state","qualities","map","index","key","myQualities","InputVisitorName","switchInputStatus","switchButtonState","type","placeholder","inputVisitorName","ref","nameVisitorRef","onInput","AddVisitor","addVisitor","changeDisableState","changeVisitorsState","onClick","disabled","isDisable","CounterVisitors","counterVisitors","DisplayVisitor","displayVisitor","visitor","DisplayVisitors","visitorsList","visitors","displayVisitors","length","AllVisitors","allVisitors","HelloVisitor","nameVisitor","helloVisitor","Visitors","createRef","newNameVisitor","current","value","setState","App","name","content","mainContainer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67f6ca82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__MEuf7\",\"mainContainer\":\"App_mainContainer__35y8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visitors\":\"Visitors_visitors__2HV3V\",\"addVisitor\":\"Visitors_addVisitor__2mhqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myName\":\"MyName_myName__2gRnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myQualities\":\"MyQualities_myQualities__1_X_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myQuality\":\"MyQuality_myQuality___Az3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputVisitorName\":\"InputVisitorName_inputVisitorName__3cd23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addVisitor\":\"AddVisitor_addVisitor__1VACQ\",\"hello\":\"AddVisitor_hello__TwkpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allVisitors\":\"AllVisitors_allVisitors__2uaMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterVisitors\":\"CounterVisitors_counterVisitors__2gzEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayVisitors\":\"DisplayVisitors_displayVisitors__1mkcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayVisitor\":\"DisplayVisitor_displayVisitor__2O3Wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helloVisitor\":\"HelloVisitor_helloVisitor__3gKlc\"};","import React from \"react\";\r\nimport styles from \"./MyName.module.css\";\r\n\r\nclass MyName extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.myName}>Бирюков Савелий-Георгий Юрьевич</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyName;","import React from \"react\";\r\nimport styles from \"./MyQuality.module.css\";\r\n\r\nclass MyQuality extends React.Component {\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={styles.myQuality}>\r\n                {this.props.quality.quality}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MyQuality;","import React from \"react\";\r\nimport styles from \"./MyQualities.module.css\";\r\nimport MyQuality from \"./MyQuality/MyQuality\";\r\n\r\nclass MyQualities extends React.Component {\r\n\r\n    state = {\r\n        qualities: [\r\n            {quality: \"Капитан\"},\r\n            {quality: \"Джек\"},\r\n            {quality: \"Воробей\"},\r\n        ],\r\n    };\r\n\r\n    render = () => {\r\n        let qualities = this.state.qualities.map((quality, index) => {\r\n            return <MyQuality quality={quality} key={index}/>;\r\n        });\r\n        return (\r\n            <div className={styles.myQualities}>\r\n                {qualities}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MyQualities;","import React from \"react\";\r\nimport styles from \"./InputVisitorName.module.css\";\r\n\r\nclass InputVisitorName extends React.Component {\r\n\r\n    switchInputStatus = () => {\r\n        this.props.switchButtonState();\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Имя своё введи\" className={styles.inputVisitorName}\r\n                       ref={this.props.nameVisitorRef} onInput={this.switchInputStatus}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default InputVisitorName;","import React from \"react\";\r\nimport styles from \"./AddVisitor.module.css\";\r\n\r\nclass AddVisitor extends React.Component {\r\n\r\n    addVisitor = () => {\r\n        this.props.changeDisableState();\r\n        this.props.changeVisitorsState();\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <button className={styles.addVisitor} onClick={this.addVisitor} disabled={this.props.isDisable}>\r\n                    WAP\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddVisitor;","import React from \"react\";\r\nimport styles from \"./CounterVisitors.module.css\";\r\n\r\nclass CounterVisitors extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.counterVisitors}>\r\n                Количество посетителей: {this.props.counterVisitors}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterVisitors;","import React from \"react\";\r\nimport styles from \"./DisplayVisitor.module.css\";\r\n\r\nclass DisplayVisitor extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.displayVisitor}>\r\n                {this.props.visitor}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DisplayVisitor;","import React from \"react\";\r\nimport styles from \"./DisplayVisitors.module.css\";\r\nimport DisplayVisitor from \"./DisplayVisitor/DisplayVisitor\";\r\n\r\nclass DisplayVisitors extends React.Component {\r\n\r\n    render = () => {\r\n        let visitorsList = this.props.visitors.map((visitor, index) => {\r\n            return (\r\n                <DisplayVisitor visitor={visitor} key={index}/>\r\n            );\r\n        });\r\n        return (\r\n            <div className={styles.displayVisitors}>\r\n                {this.props.visitors.length ? \"Посетители:\": \"Посетители: нету\"} {visitorsList}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DisplayVisitors;","import React from \"react\";\r\nimport styles from \"./AllVisitors.module.css\";\r\nimport CounterVisitors from \"./CounterVisitors/CounterVisitors\";\r\nimport DisplayVisitors from \"./DisplayVisitors/DisplayVisitors\";\r\n\r\nclass AllVisitors extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.allVisitors}>\r\n                <CounterVisitors counterVisitors={this.props.visitors.length}/>\r\n                <DisplayVisitors visitors={this.props.visitors}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AllVisitors;","import React from \"react\";\r\nimport styles from \"./HelloVisitor.module.css\";\r\n\r\nclass HelloVisitor extends React.Component {\r\n\r\n    render = () => {\r\n        if (this.props.nameVisitor) {\r\n            return (\r\n                <div className={styles.helloVisitor}>\r\n                    Hello {this.props.nameVisitor}!\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\nexport default HelloVisitor;","import React from \"react\";\r\nimport styles from \"./Visitors.module.css\";\r\nimport InputVisitorName from \"./InputVisitorName/InputVisitorName\";\r\nimport AddVisitor from \"./AddVisitor/AddVisitor\";\r\nimport AllVisitors from \"./AllVisitors/AllVisitors\";\r\nimport HelloVisitor from \"./HelloVisitor/HelloVisitor\";\r\n\r\nclass Visitors extends React.Component {\r\n\r\n    nameVisitorRef = React.createRef();\r\n\r\n    state = {\r\n        isDisable: true,\r\n        visitors: [],\r\n    };\r\n\r\n    changeVisitorsState = () => {\r\n        let newNameVisitor = this.nameVisitorRef.current.value;\r\n        this.nameVisitorRef.current.value = \"\";\r\n        this.setState({\r\n            visitors: [...this.state.visitors, newNameVisitor]\r\n        });\r\n    };\r\n\r\n    switchButtonState = () => {\r\n        this.setState({\r\n            isDisable: this.nameVisitorRef.current.value === \"\"\r\n        });\r\n    };\r\n\r\n    changeDisableState = () => {\r\n        this.setState({\r\n            isDisable: true\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.visitors}>\r\n                <div className={styles.addVisitor}>\r\n                    <InputVisitorName nameVisitorRef={this.nameVisitorRef} isDisable={this.state.isDisable}\r\n                                      switchButtonState={this.switchButtonState}/>\r\n                    <AddVisitor nameVisitorRef={this.nameVisitorRef} isDisable={this.state.isDisable}\r\n                                switchButtonState={this.switchButtonState} changeDisableState={this.changeDisableState}\r\n                                nameVisitor={this.state.visitors[this.state.visitors.length - 1] ? this.state.visitors[this.state.visitors.length - 1] : \"\"}\r\n                                changeVisitorsState={this.changeVisitorsState}/>\r\n                </div>\r\n                <HelloVisitor\r\n                    nameVisitor={this.state.visitors[this.state.visitors.length - 1] ? this.state.visitors[this.state.visitors.length - 1] : \"\"}/>\r\n                <AllVisitors visitors={this.state.visitors}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Visitors;","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport MyName from \"./components/MyName/MyName\";\r\nimport MyQualities from \"./components/MyQualities/MyQualities\";\r\nimport Visitors from \"./components/Visitors/Visitors\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.App}>\r\n                <meta name=\"viewport\" content=\"width=device-width; initial-scale=0.85; maximum-scale=0.85; user-scalable=0;\" />\r\n                <div className={styles.mainContainer}>\r\n                <MyName/>\r\n                <MyQualities/>\r\n                <Visitors/>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}